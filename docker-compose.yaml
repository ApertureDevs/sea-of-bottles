version: '3.8'

services:
  markdown-linter:
    build:
      context: docker/markdown-linter
    volumes:
      - ./:/app:delegated
    working_dir: /app

  yaml-linter:
    build:
      context: docker/yaml-linter
    volumes:
      - ./:/app:delegated
    working_dir: /app

  commit-linter:
    build:
      context: docker/commit-linter
    volumes:
      - ./:/app:delegated
    working_dir: /app

  api-webserver:
    build:
      context: docker/api-webserver
    volumes:
      - ./api:/app:delegated
    working_dir: /app
    networks:
      default:
        aliases:
          - local.api.seaofbottles.aperturedevs.com
    depends_on:
      api-database:
        condition: service_healthy
      broker:
        condition: service_healthy
      mailer:
        condition: service_healthy

  api-cli:
    build:
      context: docker/api-cli
    volumes:
      - ./api:/app:delegated
    working_dir: /app
    depends_on:
      api-database:
        condition: service_healthy
      broker:
        condition: service_healthy
      mailer:
        condition: service_healthy

  api-worker:
    build:
      context: docker/api-cli
    volumes:
      - ./api:/app:delegated
    working_dir: /app
    depends_on:
      api-database:
        condition: service_healthy
      broker:
        condition: service_healthy
      mailer:
        condition: service_healthy
    restart: on-failure
    command: bin/console messenger:consume message_broker -vv

  api-database:
    image: postgres:13
    volumes:
      - api-database-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: sob
      POSTGRES_PASSWORD: password
    healthcheck:
      test: pg_isready -U sob
      interval: 5s
      timeout: 5s
      retries: 20

  frontend-webserver:
    image: node:lts
    expose:
      - 4200
    command: npx ng serve --host 0.0.0.0 --disable-host-check --poll=5000
    volumes:
      - ./frontend:/app:delegated
    working_dir: /app
    depends_on:
      - api-webserver

  frontend-cli:
    build:
      context: docker/frontend-cli
    volumes:
      - ./frontend:/app:delegated
    working_dir: /app
    depends_on:
      - api-webserver
    environment:
      CYPRESS_CACHE_FOLDER: /app/.cypress

  broker:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: "sob"
      RABBITMQ_DEFAULT_PASS: "password"
    hostname: broker
    volumes:
      - broker-data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 5s
      retries: 20

  mailer:
    image: maildev/maildev
    restart: on-failure
    command: bin/maildev --web 80 --smtp 25 --hide-extensions STARTTLS
    healthcheck:
      test: wget -O - http://localhost:80/healthz || exit 1
      interval: 5s
      timeout: 5s
      retries: 20

networks:
  default:
    external: false

volumes:
  api-database-data: ~
  broker-data: ~
